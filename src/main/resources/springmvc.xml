<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--<bean name="/index.do" class="com.smbms.controller.IndexController"/>-->
    <!--<bean name="/welcome.do" class="com.smbms.controller.WelcomeController"/>-->

    <!--处理器映射器-->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->
    <!--处理器适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->

    <!--开启扫描包-->
    <context:component-scan base-package="com.smbms.controller"/>
    <!--启动注解驱动-->
    <!--<mvc:annotation-driven>会自动注册DefaultAnnotationHandlerMapping
    与AnnotationMethodHandlerAdapter两个Bean,
    这是Spring MVC为@Controller分发请求所必需的，并且提供了数据绑定支持
    如果不配置（@Controller @RequestMapping等基本功能除外），不支持返回类型的定义@ResponseBody，@RestController等
     -->
    <mvc:annotation-driven>
        <!--解决ajax返回数据中文乱码-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--解决ajax数据格式问题： 1.把bean转换为json，2.处理日期格式-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <!--返回日期格式的转化器-->
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1"></property>
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <!--后缀-->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--把静态资源请求路径映射到/statics/目录-->
    <!--<mvc:resources mapping="/statics/**" location="/statics/" />-->

    <!--不拦截静态资源-->
    <mvc:default-servlet-handler/>

    <!--  全局异常处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 可自定义异常类型，跳转到不同的视图 -->
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
        <property name="exceptionAttribute" value="e"></property>
    </bean>

    <!-- 上传文件解析器，使用spring的CommonsMultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传文件大小上限，单位为字节5M=5*1024*1204=5242880-->
        <property name="maxUploadSize" value="5000000"/>
        <!--请求的编码格式，默认为ISO-8859-1，此处设置为UTF-8-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>